{"version":3,"sources":["webpack:///path---projects-traveller-1e9c33437555e29fae88.js","webpack:///./.cache/json/projects-traveller.json"],"names":["webpackJsonp","338","module","exports","data","contentfulProject","name","summary","description","childMarkdownRemark","html","repoURL","userScreen","file","url","fileName","technology","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,KAAA,YAAAC,QAAA,oDAAAC,aAAgGC,qBAAuBC,KAAA,2zBAAi0BC,QAAA,mDAAAC,YAA4EC,MAAQC,IAAA,0HAAAC,SAAA,gCAA0KC,YAAA,sJAAoKC,aAAgBX,KAAA","file":"path---projects-traveller-1e9c33437555e29fae88.js","sourcesContent":["webpackJsonp([161438249409569],{\n\n/***/ 338:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"contentfulProject\":{\"name\":\"Traveller\",\"summary\":\"Local Points of Interest + Real-time Transit Info\",\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Traveller is a mobile App written in React Native for iOS and Android.</p>\\n<p>The back end was dockerized and initially deployed on Amazon Web Services. The back end was written in NodeJS/Express. Google Places API, and Google Maps APIs were consumed in addition with the Navitia open transit API. These third party API results were cached server-side via Redis; this cache followed a Least Recently Used policy.</p>\\n<p>On the React Native client Side, Redux was implemented to maintain state as location, point-of-interest search results, mode of transit with real-time transit information, and current user GPS location were all being tracked by the App. The UI follows Google's Material Design philosophy, as it creates a sense of uniformity given that Google Maps was an integral part of the app's interface. </p>\"}},\"repoURL\":\"https://github.com/Alabaster-Aardvarks/Traveller\",\"userScreen\":{\"file\":{\"url\":\"//images.ctfassets.net/uconvssgdrn4/5p5ovWXX8Im8gCQCiUoKK8/b29d35cc75aa0f46df17397c69fd5f7b/travellerMapScreen_copy.png\",\"fileName\":\"travellerMapScreen copy.png\"}},\"technology\":[\"JavaScript\",\"React Native\",\"Redux\",\"NodeJS / Express\",\"Redis\",\"Mocha\",\"Material Design\",\"Google Places API\",\"Google Maps API\",\"Navitia API\",\"GPS\"]}},\"pathContext\":{\"name\":\"Traveller\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---projects-traveller-1e9c33437555e29fae88.js","module.exports = {\"data\":{\"contentfulProject\":{\"name\":\"Traveller\",\"summary\":\"Local Points of Interest + Real-time Transit Info\",\"description\":{\"childMarkdownRemark\":{\"html\":\"<p>Traveller is a mobile App written in React Native for iOS and Android.</p>\\n<p>The back end was dockerized and initially deployed on Amazon Web Services. The back end was written in NodeJS/Express. Google Places API, and Google Maps APIs were consumed in addition with the Navitia open transit API. These third party API results were cached server-side via Redis; this cache followed a Least Recently Used policy.</p>\\n<p>On the React Native client Side, Redux was implemented to maintain state as location, point-of-interest search results, mode of transit with real-time transit information, and current user GPS location were all being tracked by the App. The UI follows Google's Material Design philosophy, as it creates a sense of uniformity given that Google Maps was an integral part of the app's interface. </p>\"}},\"repoURL\":\"https://github.com/Alabaster-Aardvarks/Traveller\",\"userScreen\":{\"file\":{\"url\":\"//images.ctfassets.net/uconvssgdrn4/5p5ovWXX8Im8gCQCiUoKK8/b29d35cc75aa0f46df17397c69fd5f7b/travellerMapScreen_copy.png\",\"fileName\":\"travellerMapScreen copy.png\"}},\"technology\":[\"JavaScript\",\"React Native\",\"Redux\",\"NodeJS / Express\",\"Redis\",\"Mocha\",\"Material Design\",\"Google Places API\",\"Google Maps API\",\"Navitia API\",\"GPS\"]}},\"pathContext\":{\"name\":\"Traveller\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/projects-traveller.json\n// module id = 338\n// module chunks = 161438249409569"],"sourceRoot":""}